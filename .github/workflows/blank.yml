# This is a basic workflow to help you get started with Actions

name: My first WorkFlow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # runs-on: ubuntu-latest
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
      - name: Build Dockerfile
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/hello-world-nginx:${{ github.sha }} .

      - name: Stop the container if running, otherwise ignore
        run: docker stop gh-actions-test || true

      - name: Remove the container if exists, otherwise ignore
        run: docker rm gh-actions-test || true

      - name: Run & Test Dockerfile
        run: |
          docker run -d -p 8000:80 --name gh-actions-test ${{ secrets.DOCKER_USERNAME }}/hello-world-nginx:${{ github.sha }}

      # Install kubectl if required
      # - name: Install Kubectl
      #   run: |
      #     curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl"
      #     chmod +x ./kubectl
      #     sudo mv ./kubectl /usr/local/bin/kubectl
      #     sudo chown root: /usr/local/bin/kubectl 
      #     kubectl version --client
      
      - name: Kubectl tests
        run: |
          kubectl get pods
          kubectl get services
          
      # - name: Create K8s namespace, if not exists
      #   run: |
      #     kubectl create namespace gh-actions-test || true
      
      # - name: Deploy to K8s
      #   run: |
      #     kubectl apply -f kubernetes-nginx.yaml
      
      - name: Helm test
        run:  |
          helm version

      - name: Helm upgrade or install, and override values
        run: |
          helm upgrade --install gh-actions-test ./helm/nginx-v02 --namespace gh-actions-test --set image.tag=${{ github.sha }} --set service.nodePort=30082
